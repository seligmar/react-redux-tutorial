{"ast":null,"code":"// reducers take care of all related actions- in this case, related to the counter\n// reducers take two variables- initial state and action\n// switch as are used for longer/more complex if/else statements\n// always return default: return state\n// redux dev tools extension is very nifty- just do a google search for it :)\nexport const increment = num => {\n  return {\n    type: 'INCREMENT',\n    payload: num\n  };\n};\nexport const decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n};","map":{"version":3,"sources":["/Users/maryselig/Documents/react-redux-tutorial/react-redux-tutorial/src/actions/counter.js"],"names":["increment","num","type","payload","decrement"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,SAAS,GAAGC,GAAG,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC7B,SAAO;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM","sourcesContent":["// reducers take care of all related actions- in this case, related to the counter\n// reducers take two variables- initial state and action\n// switch as are used for longer/more complex if/else statements\n// always return default: return state\n// redux dev tools extension is very nifty- just do a google search for it :)\n\nexport const increment = num => {\n  return {\n    type: 'INCREMENT',\n    payload: num\n  }\n}\n\nexport const decrement = () => {\n  return { type: 'DECREMENT' }\n}\n"]},"metadata":{},"sourceType":"module"}